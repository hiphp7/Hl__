// JavaScript Documentvar effectCommon = {    checkIdCard: function(code) {        var tip = '';        function IdentityCodeValid(code) {            var city = {                    11: "北京",                    12: "天津",                    13: "河北",                    14: "山西",                    15: "内蒙古",                    21: "辽宁",                    22: "吉林",                    23: "黑龙江 ",                    31: "上海",                    32: "江苏",                    33: "浙江",                    34: "安徽",                    35: "福建",                    36: "江西",                    37: "山东",                    41: "河南",                    42: "湖北 ",                    43: "湖南",                    44: "广东",                    45: "广西",                    46: "海南",                    50: "重庆",                    51: "四川",                    52: "贵州",                    53: "云南",                    54: "西藏 ",                    61: "陕西",                    62: "甘肃",                    63: "青海",                    64: "宁夏",                    65: "新疆",                    71: "台湾",                    81: "香港",                    82: "澳门",                    91: "国外 "                },                pass = true;            if (!code || !/^[1-9][0-9]{5}(19[0-9]{2}|20[0-9]{2})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9xX]$/i.test(code)) {                tip = "身份证号格式错误";                pass = false;            } else if (!city[code.substr(0, 2)]) {                tip = "地址编码错误";                pass = false;            } else {                //18位身份证需要验证最后一位校验位                if (code.length == 18) {                    code = code.split('');                    //∑(ai×Wi)(mod 11)                    //加权因子                    var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];                    //校验位                    var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];                    var sum = 0;                    var ai = 0;                    var wi = 0;                    for (var i = 0; i < 17; i++) {                        ai = code[i];                        wi = factor[i];                        sum += ai * wi;                    }                    var last = parity[sum % 11];                    if (parity[sum % 11] != code[17]) {                        tip = "校验位错误";                        pass = false;                    }                }            }            return pass;        }        pass = IdentityCodeValid(code);        if (!pass) {            publicFunction.manualTips(tip, "确定");        };        return pass;    },    index: function() { //首页        //banner        var iconhegint = $(".slide").find("img").height();        $(".slide").css({            "height": iconhegint        });        $(".slide ul li").each(function() {            $(".dot").append("<span></span>")        });        $('#slide3').swipeSlide({            continuousScroll: true,            speed: 3000,            transitionType: 'cubic-bezier(0.22, 0.69, 0.72, 0.88)',            firstCallback: function(i, sum, me) {                me.find('.dot').children().first().addClass('cur');            },            callback: function(i, sum, me) {                me.find('.dot').children().eq(i).addClass('cur').siblings().removeClass('cur');            }        });        $(window).resize(function() {            var iconhegint = $(".slide").find("img").height();            $(".slide").css({                "height": iconhegint            });        }) /*.resize()	*/ ;        //往返程点击切换        var buao = 0        $(".wep_tap li").on("click", function() {            $(this).addClass("on").siblings().removeClass("on");            var thisindex = $(this).index();            if (thisindex == 1) {                if (buao == 0) {                    $(".ReturnBox").show()                    buao = 1;                }            } else {                $(".ReturnBox").hide();                buao = 0;            }        });        //出发地和目的地切换        $(".but_swi").on("click", function() {            //var departure=$(".departure").html();            //var destination=$(".destination").html();            $(".departure").addClass("bin_left");            $(".destination").addClass("bin_right");            $(this).addClass("salse360");            setTimeout(function() {                $(".departure").removeClass("bin_left");                $(".destination").removeClass("bin_right");                $(".but_swi").removeClass("salse360")            }, 500);        });        //右边字母排        //点击字母滑动到相应的位置        $(document).on("click", ".abcbox li", function() {            var abcindex = $(this).index();            var situ = parseInt($(".pttop100").css("padding-top"))            var offTop = parseInt($(".citylistbox dl:eq(" + abcindex + ")").offset().top) - situ;            $('html,body').animate({                scrollTop: offTop            }, 300);            publicFunction.promptBox($(this).find("a").html());        });        //点击显示出发地城市选择        var Cityrecords = 0;        $(document).on("click", ".cityBut", function() {            if ($(this).is(".departure")) {                Cityrecords = 1; //表示选择出发地                $(".cityselect .heaTxx").html("选择出发地");                $(".cityselect .cityinput").attr("placeholder", "请输入出发地的名称，如深圳,sz,shenzhen");            } else {                Cityrecords = 2; //表示选择目的地                $(".cityselect .heaTxx").html("选择目的地");                $(".cityselect .cityinput").attr("placeholder", "请输入目的的名称，如深圳,sz,shenzhen");            }            publicFunction.rightAnimation("cityselect", "onbut");            setTimeout(function() {                $('.pftop50').css('position', 'fixed');            }, 500);            $(".abcciytbox").show();        });        //选中城市显示        $(document).on("click", ".cityulbox li a, .citylistbox dl dd", function() {            /*var citythis=$(this).html();            var departxt            if(Cityrecords==1){                departxt=$(".destination").html();                }else if(Cityrecords==2){                      departxt=$(".departure").html();                     };            if(citythis == departxt){                publicFunction.promptBox("出发地不能跟目的地相同")                }else{                    publicFunction.returnbut("select_box","mainsecit","cityselect .header, cityselect .hidetop, .abcciytbox");                    $('body,html').scrollTop(0);                    Cityrecords=0;                };*/            $('.pftop50').css('position', 'absolute');            publicFunction.returnbut("select_box", "mainsecit", "cityselect .header, .cityselect .hidetop  ");            $(".abcciytbox").hide();            Cityrecords = 0;            $('body,html').scrollTop(0);        });        //选择时间        $(document).on("click", ".datebut", function() {            if ($(this).is(".dateture")) {                Cityrecords = 1; //表示选择出发时间                $("dateselect .heaTxx").html("选择出发日期");            } else {                Cityrecords = 2; //表示选择返程时间                $(".dateselect .heaTxx").html("选择返程日期");            }            publicFunction.rightAnimation("dateselect", "onbut");        });    },    flightsPage: function() { //航班信息页面        //选中不限时其它取消选中        $(document).on("change", ".inlut_sel li:first-child input[type='checkbox']", function() {            if ($(this).prop("checked") == true) {                $(this).attr("disabled", "disabled");                $(this).parent().parent().parent().siblings().find("input[type='checkbox']").prop("checked", false);            }        });        $(document).on("change", ".inlut_sel li:not(:first-child) input[type='checkbox']", function() {            if ($(this).prop("checked") == true) {                $(this).parent().parent().parent().parent().find("li:first input[type='checkbox']").prop("checked", false).removeAttr("disabled");            }            var nsijr = $(this).parent().parent().parent().parent().find("input[type='checkbox']:checked").length;            if (nsijr == 0) {                $(this).parent().parent().parent().parent().find("li:first input[type='checkbox']").prop("checked", true).attr("disabled", "disabled");            }        });        // 根据左边选择 相应显示右边的内容        $(document).on("click", ".fil_tuaobox li", function() {            var linthis = $(this).index();            $(this).addClass("on").siblings().removeClass("on");            $(".filt_riamin .selctbox:eq(" + linthis + ")").show().siblings().hide();        });        //取消隐藏筛选条件框		$(document).on("click", ".filter_nav li",function() {            var nautindex = $(this).index();                            $(this).addClass("on").siblings().removeClass("on");            if (nautindex == 0) {                $(".filterBox").show().addClass("onbut");            };        });        //清空筛选        $(document).on("click", ".clearFilter", function() {            $(".filterMian input[type='checkbox']").prop("checked", false);            $(".yuainsbt").prop("checked", true).attr("disabled", "disabled");        })        //点击显示相应的航班        $(document).on("click", ".huabanBox li > a", function() {                        var bgClass = $(this).next().css("display");            if (bgClass == "none") {                $(this).parent().addClass("on").siblings().removeClass("on");                $(this).next().slideDown().parent().siblings().find(".huaix_ul").hide();                $(this).parent().next().addClass("border_t_1_d").siblings().removeClass("border_t_1_d");            } else {                $(this).parent().removeClass("on");                $(this).next().slideUp();                $(this).parent().next().removeClass("border_t_1_d");            }        });        setTimeout(function() {            $(".filterBox").hide().removeClass("yti_hdie");        }, 100);        //航班信息弹出日历表        $(document).on("click", ".databutBix", function() {            //publicFunction.rightAnimation("dateselect","onbut")        });    },    fromlistpage: function() { //订单填写页面        $("#yuan-1-2").change(function() {            if ($(this).prop("checked") == true) {                $(".niu_ubox").slideDown();                $(".selsetadress").addClass("addaddressin");                $(".selsetadress .heaTxx").html("编辑收件地址");                publicFunction.rightAnimation("selsetadress", "onbut");            } else {                $(".niu_ubox").slideUp();            }        });        $(window).resize(function() {            var bsut = $(window).height();            $(".wrap_Box").css({                "min-height": bsut            });        }).resize();        $(".bitu_bg, .minsjBox").on("click", function() {            var nsdisplay = $(".minsjBox").css("display");            if (nsdisplay == "none") {                $(".bitu_bg").find("i").addClass("salse180").removeClass("salse000");                $(".minsjBox").stop().slideDown();            } else {                $(".bitu_bg").find("i").addClass("salse000").removeClass("salse180");                $(".minsjBox").stop().slideUp();            }        });        $(document).on("change", "#addcredentials", function() {            if ($(this).val() == "身份证") {                $(".bapdate").hide();            } else {                $(".bapdate").show();            }        });        $(document).on("click", ".bsiu_but", function() {            var nsdisplay = $(".duow_show").css("display");            if (nsdisplay == "none") {                $(this).find("img").addClass("salse180").removeClass("salse000");                $(".duow_show").stop().slideDown();                $(".retuelist").addClass("bord_t_1_fff");                $(".title_01").stop().slideUp();                $(".title_02").stop().slideDown();            } else {                $(this).find("img").addClass("salse000").removeClass("salse180");                $(".duow_show").stop().slideUp();                $(".retuelist").removeClass("bord_t_1_fff");                $(".title_01").stop().slideDown();                $(".title_02").stop().slideUp();            }        });    },    formSelsec: { // 订单填写调用        addBut: function() { //编辑，新增乘客时确定调用            if ($(".addfliman").is(".mainformsecle")) {                $(".addfliman").removeClass("mainformsecle");                publicFunction.returnbut("addfliman", "mainsecit", "addfliman .header");            } else {                $(".addfliman").removeClass("mainformadd");                publicFunction.returnbut("addfliman", "selsetliman ", "addfliman .header");            }        },        addLimain: function() { //选择乘客确定验证调用            var butid = $('.selsetliman input[type="checkbox"]:checked').length;            if (butid < 1) {                publicFunction.promptBox("请选择乘客");                return false;            } else if (butid > 9) {                publicFunction.promptBox("一张订单最多添加 9 个乘客");                return false;            } else {                $(".selsetliman").removeClass("selsetformsecle")                publicFunction.returnbut("selsetliman", "mainsecit", "selsetliman .header");                return true;            };        },        addAdress: function() { //编辑，新增收货地址时确定调用            if ($(".addaddress").is(".mainaddressin")) {                $(this).parent().parent().removeClass("mainaddressin")                publicFunction.returnbut("addaddress", "mainsecit", "addaddress .header");            } else {                $(".addaddress").removeClass("hskaddressin")                publicFunction.returnbut("addaddress", "selsetadress", "addaddress .header");            }        },        addSleAdr: function() { //选择收货地址时确定调用            var nauht = $('.addaddressin input[type="radio"]:checked').length;            if (nauht == 0) {                publicFunction.promptBox("请选择收货地址");            } else {                $(".selsetadress").removeClass("addaddressin");                publicFunction.returnbut("selsetadress", "mainsecit", "selsetadress .header");            }        }    },    addman: function() { //正则验证新增或编辑乘客        var name = $("#addname").val();        var nametest = /[a-zA-Z]+\/[a-zA-Z]+/; //英文名        var namezhone = /[^\u4E00-\u9FA5]/; //中文名        if (name == "") {            publicFunction.manualTips("乘客姓名不能为空", "确定");            return false;        } else {            if (namezhone.test(name)) {                if (!nametest.test(name.replace(/\s/g, ''))) {                    publicFunction.manualTips("英文名格式不正确,例：zhone/wu或zhone /wu", "确定");                    return false;                };            };        };        var addcredentials = $("#addcredentials").val();        if (addcredentials == "") {            publicFunction.manualTips("证件类型不能为空", "确定");            return false;        } else if (addcredentials != "身份证") {            if ($("#inputpdate").val() == "") {                publicFunction.manualTips("出生日期不能为空", "确定");                return false;            };            /*if(addcredentials=="护照"){				var ughd=/^[a-zA-Z0-9]{3,21}$/;				if(!ughd.test($("#addnumber").val())){					publicFunction.manualTips( "护照号码不正确","确定" );					return false;					}				};*/        } else {            //验证身份证            var code = $("#addnumber").val(),                tip = '';            function IdentityCodeValid(code) {                var city = {                        11: "北京",                        12: "天津",                        13: "河北",                        14: "山西",                        15: "内蒙古",                        21: "辽宁",                        22: "吉林",                        23: "黑龙江 ",                        31: "上海",                        32: "江苏",                        33: "浙江",                        34: "安徽",                        35: "福建",                        36: "江西",                        37: "山东",                        41: "河南",                        42: "湖北 ",                        43: "湖南",                        44: "广东",                        45: "广西",                        46: "海南",                        50: "重庆",                        51: "四川",                        52: "贵州",                        53: "云南",                        54: "西藏 ",                        61: "陕西",                        62: "甘肃",                        63: "青海",                        64: "宁夏",                        65: "新疆",                        71: "台湾",                        81: "香港",                        82: "澳门",                        91: "国外 "                    },                    pass = true;                if (!code || !/^\d{6}(18|19|20)?\d{2}(0[1-9]|1[12])(0[1-9]|[12]\d|3[01])\d{3}(\d|X)$/i.test(code)) {                       tip = "身份证号格式错误";                    pass = false;                } else if (!city[code.substr(0, 2)]) {                       tip = "地址编码错误";                    pass = false;                } else {                    //18位身份证需要验证最后一位校验位                    if (code.length == 18) {                        code = code.split('');                        //∑(ai×Wi)(mod 11)                        //加权因子                        var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];                        //校验位                        var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];                        var sum = 0;                        var ai = 0;                        var wi = 0;                        for (var i = 0; i < 17; i++) {                            ai = code[i];                            wi = factor[i];                            sum += ai * wi;                        }                        var last = parity[sum % 11];                        if (parity[sum % 11] != code[17]) {                            tip = "校验位错误";                            pass = false;                        }                    }                }                // if(!pass) alert(tip);                return pass;            }            // var city = { 11: "北京", 12: "天津", 13: "河北", 14: "山西", 15: "内蒙古", 21: "辽宁", 22: "吉林", 23: "黑龙江 ", 31: "上海", 32: "江苏", 33: "浙江", 34: "安徽", 35: "福建", 36: "江西", 37: "山东", 41: "河南", 42: "湖北 ", 43: "湖南", 44: "广东", 45: "广西", 46: "海南", 50: "重庆", 51: "四川", 52: "贵州", 53: "云南", 54: "西藏 ", 61: "陕西", 62: "甘肃", 63: "青海", 64: "宁夏", 65: "新疆", 71: "台湾", 81: "香港", 82: "澳门", 91: "国外 " };            // var tip = "";            // var pass = true;            //            // if (!code || !/^[1-9][0-9]{5}(19[0-9]{2}|200[0-9]|2010)(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])[0-9]{3}[0-9xX]$/i.test(code)) {            //     tip = "身份证号格式不正确";            //     pass = false;            // }            //            // else if (!city[code.substr(0, 2)]) {            //     tip = "地址编码不正确";            //     pass = false;            // }            // else {            //     //18位身份证需要验证最后一位校验位            //     if (code.length == 18) {            //         code = code.split('');            //         //∑(ai×Wi)(mod 11)            //         //加权因子            //         var factor = [7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2];            //         //校验位            //         var parity = [1, 0, 'X', 9, 8, 7, 6, 5, 4, 3, 2];            //         var sum = 0;            //         var ai = 0;            //         var wi = 0;            //         for (var i = 0; i < 17; i++) {            //             ai = code[i];            //             wi = factor[i];            //             sum += ai * wi;            //         }            //         var last = parity[sum % 11];            //         if (parity[sum % 11] != code[17]) {            //             tip = "校验位错误";            //             pass = false;            //         }            //     }            // }            pass = IdentityCodeValid(code);            if (!pass) {                publicFunction.manualTips(tip, "确定");            };            return pass;        };        var addnumber = $("#addnumber").val();        if (addnumber == "") {            publicFunction.manualTips("证件号码不能为空", "确定");            return false;        };    },    addaddress: function() { //正则验证新增或编辑收货址        var addressName = $("#addressName").val();        if (addressName == "") {            publicFunction.manualTips("收货人不能为空", "确定");            return false;        };        var addressLisr = $("#addressLisr").val();        if (addressLisr == "") {            publicFunction.manualTips("详细地址不能为空", "确定");            return false;        };        var addressPone = $("#addressPone").val();        var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;        if (addressPone == "") {            publicFunction.manualTips("手机号码不能为空", "确定");            return false;        } else if (!myreg.test(addressPone)) {            publicFunction.manualTips("手机号码格式不正确", "确定");            return false;        };    },    attemRegular: function() {        var attenName = $.trim($("#attenName").val());        if (attenName == "") {            publicFunction.manualTips("请填写联系人姓名", "确定");            return false;        };        var attemPhone = $("#attenPhone").val();        var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;        if (attemPhone == "") {            publicFunction.manualTips("请填写联系人手机号码", "确定");            return false;        } else if (!myreg.test(attemPhone)) {            publicFunction.manualTips("请输入正确的联系人手机号码", "确定");            return false;        };    },    registered: { //注册页面        registFunciton: function() {            var userName = $(".phoneName").val();            var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;            if (userName == "") {                publicFunction.promptBox("请填写手机号码");                return false;            } else if (!myreg.test(userName)) {                publicFunction.promptBox("请输入正确的手机号码");                return false;            };            var codes = $(".codes").val();            var myreg = /^\d{6}$/;            if (codes == "") {                publicFunction.promptBox("请填写验证码");                return false;            } else if (!myreg.test(codes)) {                publicFunction.promptBox("验证码格式不正确");                return false;            };            var myreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{6,18}$/;            //var myreg=/^[A-Za-z0-9!@#$%^&*()_+|{}?><\-\]\\[\/]{6,18}$/;            var respas = $(".possword").val();            if (respas == "") {                publicFunction.promptBox("请填写密码", "确认");                return false;            } else if (!myreg.test(respas)) {                publicFunction.promptBox("请输入6-18位包含字母,数字，特殊字符中两种的密码");                return false;            };            if (!$("#yuan-1-2").prop("checked")) {                publicFunction.promptBox("请勾选服务条款");                return false;            }        },        findregistFunciton: function() { //找回密码            var userName = $(".phoneName").val();            var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;            if (userName == "") {                publicFunction.promptBox("请填写手机号码");                return false;            } else if (!myreg.test(userName)) {                publicFunction.promptBox("请输入正确的手机号码");                return false;            };            var codes = $(".codes").val();            var myreg = /^\d{6}$/;            if (codes == "") {                publicFunction.promptBox("请填写验证码");                return false;            } else if (!myreg.test(codes)) {                publicFunction.promptBox("验证码格式不正确");                return false;            };            var myreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{6,18}$/;            //var myreg=/^[A-Za-z0-9!@#$%^&*()_+|{}?><\-\]\\[\/]{6,18}$/;            var respas = $(".possword").val();            if (respas == "") {                publicFunction.promptBox("请填写密码", "确认");                return false;            } else if (!myreg.test(respas)) {                publicFunction.promptBox("请输入6-18位包含字母,数字，特殊字符中两种的密码");                return false;            };        },        userName: function() { //注册第一步验证            var userName = $.trim($(".phoneName").val());            var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;            if (userName == "") {                publicFunction.promptBox("请填写手机号码", "确认");                return false;            } else if (!myreg.test(userName)) {                publicFunction.promptBox("请输入正确的手机号码", "确认");                return false;            };        },        password: function() {            var myreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{8,18}$/;            var respas = $(".possword").val();            if (respas == "") {                publicFunction.manualTips("请填写密码", "确认");                return false;            } else if (!myreg.test(respas)) {                publicFunction.manualTips("密码格式不正确，必须为8-18位字符，且至少包括字母、数字、特殊字符中的两种。", "确认");                return false;            };        },        codes: function() {            var codes = $(".codes").val();            var myreg = /^\d{6}$/;            if (codes == "") {                publicFunction.manualTips("请填写验证码", "确认");                return false;            } else if (!myreg.test(codes)) {                publicFunction.manualTips("验证码格式不正确", "确认");                return false;            };        },        respassword: function() {            var myreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{8,18}$/;            var respas = $(".possword").val();            if (respas == "") {                publicFunction.manualTips("请填写密码", "确认");                return false;            } else if (!myreg.test(respas)) {                publicFunction.manualTips("密码格式不正确，必须为8-18位字符，且至少包括字母、数字、特殊字符中的两种。", "确认");                return false;            };            var repeatrespas = $(".repeatPossword").val();            if (repeatrespas != respas) {                publicFunction.manualTips("两次输入的密码不一致", "确认");                return false;            };        }    },    login: function() {        var username = $(".userName").val();        var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;        var email = /^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/;        if (username == "") {            publicFunction.promptBox("请填写用户名");            return false;        } else if (!myreg.test(username) && !email.test(username)) {            publicFunction.promptBox("用户名不正确");            return false;        };        var posswor = $(".posswordInput").val();        var posswormyreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{8,18}$/;        if (posswor == "") {            publicFunction.promptBox("请填写密码");            return false;        }        /*else if(!posswormyreg.test(posswor)){        				publicFunction.promptBox( "请输入6-18位包含字母,数字，特殊字符中两种的密码");        				return false;        				}*/    },    payPage: function() { //支付页面        $(document).on("click", ".dinsbut", function() {            if ($(".smabt_box").css("display") == "none") {                $(this).find(".nsiut_icon").addClass("salse180").removeClass("salse000");                $(".smabt_box").stop().slideDown();            } else {                $(this).find(".nsiut_icon").addClass("salse000").removeClass("salse180");                $(".smabt_box").stop().slideUp();            }        });    },    myAccount: { //我的        mydata: function() {            var name = $(".dataMation .dataName").val();            var rieurkd = $('.dataMation input[type="radio"]:checked').val();            if (name == "") {                publicFunction.manualTips("请填写姓名", "确认");                return false;            };            if (rieurkd == null) {                publicFunction.manualTips("请选择姓别", "确认");                return false;            }        },        myphone: function() {            var myphone = $(".phoneMation .myphone").val();            var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;            if (myphone == "") {                publicFunction.manualTips("请填写手机号码", "确认");                return false;            } else if (!myreg.test(myphone)) {                publicFunction.manualTips("手机号码格式不正确", "确认");                return false;            };            var mycodes = $(".phoneMation .mycodes").val()            var myreg = /^\d{6}$/;            if (mycodes == "") {                publicFunction.manualTips("请填写验证码", "确认");                return false;            } else if (!myreg.test(mycodes)) {                publicFunction.manualTips("验证码格式不正确", "确认");                return false;            };        },        phone: function() {            var myphone = $(".phoneMation .myphone").val();            var myreg = /^(((13[0-9]{1})|(15[0-9]{1})|(17[0-9]{1})|(18[0-9]{1}))+\d{8})$/;            if (myphone == "") {                publicFunction.manualTips("请填写手机号码", "确认");                return false;            } else if (!myreg.test(myphone)) {                publicFunction.manualTips("手机号码格式不正确", "确认");                return false;            };        },        myemail: function(p) {            var myemail = $(".emailMation .myemail").val();            var email = /^(\w-*\.*)+@(\w-?)+(\.\w{2,5})+$/;            if (myemail == "") {                publicFunction.manualTips("请填写邮箱", "确认");                return false;            } else if (!email.test(myemail)) {                publicFunction.manualTips("邮箱格式不正确", "确认");                return false;            };            if (p) {                var mycodes = $(".phoneMation .mycodes").val()                var myreg = /^\d{6}$/;                if (mycodes == "") {                    publicFunction.manualTips("请填写验证码", "确认");                    return false;                } else if (!myreg.test(mycodes)) {                    publicFunction.manualTips("验证码格式不正确", "确认");                    return false;                };            }        },        password: function() {            var oldpassword = $(".passwordMation .oldpassword").val();            var myreg = /^(?![\d]+$)(?![a-zA-Z]+$)(?![^\da-zA-Z]+$).{8,18}$/;            if (oldpassword == "") {                publicFunction.manualTips("请填当前密码", "确认");                return false;            };            var newpassword = $(".passwordMation .newpassword").val();            if (newpassword == "") {                publicFunction.manualTips("请填新密码", "确认");                return false;            } else if (!myreg.test(newpassword)) {                publicFunction.manualTips("新密码格式不正确，必须为8-18位字符，且至少包括字母、数字、特殊字符中的两种。", "确认");                return false;            };            if ($("#checkbox-r-1").prop("checked") == false) {                var paopassword = $(".passwordMation .paopassword").val();                if (newpassword != paopassword) {                    publicFunction.manualTips("两次输入的密码不一致", "确认");                    return false;                };            }        }    },    tunanFn: function() {        var nsjus = $('.ckns_Ul input[type="checkbox"]:checked').length;        if (nsjus == 0) {            publicFunction.manualTips("请选择退票人", "确定");            return false;        };        if ($(".abks_se01").val() == "请选择") {            publicFunction.manualTips("请选择退票原因", "确定");            return false;        };        if ($(".abks_se02").val() == "请选择") {            publicFunction.manualTips("请选择退票原因", "确定");            return false;        };    },    mealFn: function() {        var nsjus = $('.ckns_Ul input[type="checkbox"]:checked').length;        if (nsjus == 0) {            publicFunction.manualTips("请选择改签人", "确定");            return false;        };        if ($(".tidhbs_box").val() == "") {            publicFunction.manualTips("请选择出发时间", "确定");            return false;        };    },    //是否为有效的日期格式    judgeDate: function(str) {        //如果是正确的日期格式返回true,否则返回false        var regExp;        regExp = /\b\d{4}-\d{1,2}-\d{1,2}\b/;        var tmpArr = str.split('-');        if (tmpArr.length != 3) {            tmpArr = str.split('/');            if (tmpArr.length != 3) {                return false;            }        }        var rYear, rMonth, rDay        rYear = parseInt(tmpArr[0]);        rMonth = parseInt(tmpArr[1]);        rDay = parseInt(tmpArr[2]);        var rYearflag;        //判断润年        if (((rYear % 100) == 0) && ((rYear % 4) == 0)) {            rYearflag = true;        } else if ((rYear % 4) == 0) {            rYearflag = true;        } else {            rYearflag = false;        }        if (((",1,3,5,7,8,10,12,").indexOf("," + rMonth + ",") != -1) && (rDay < 32)) {            return true;        } else if (((",4,6,9,11,").indexOf("," + rMonth + ",") != -1) && (rDay < 31)) {            return true;        } else if (rDay < 29) {            return true;        } else if (rYearflag && (rDay < 30)) {            return true;        } else {            return false;        }    },    //判断是否在微信中打开    isWeChat: function is_weixn() {        var ua = navigator.userAgent.toLowerCase();        if (ua.match(/MicroMessenger/i) == "micromessenger") {            return true;        } else {            return false;        }    }};